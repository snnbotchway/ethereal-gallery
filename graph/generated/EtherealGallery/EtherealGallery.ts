// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TokenListed extends ethereum.Event {
  get params(): TokenListed__Params {
    return new TokenListed__Params(this);
  }
}

export class TokenListed__Params {
  _event: TokenListed;

  constructor(event: TokenListed) {
    this._event = event;
  }

  get nftAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TokenSaleCancelled extends ethereum.Event {
  get params(): TokenSaleCancelled__Params {
    return new TokenSaleCancelled__Params(this);
  }
}

export class TokenSaleCancelled__Params {
  _event: TokenSaleCancelled;

  constructor(event: TokenSaleCancelled) {
    this._event = event;
  }

  get nftAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TokenSold extends ethereum.Event {
  get params(): TokenSold__Params {
    return new TokenSold__Params(this);
  }
}

export class TokenSold__Params {
  _event: TokenSold;

  constructor(event: TokenSold) {
    this._event = event;
  }

  get nftAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class EtherealGallery__tokenListingResultValue0Struct extends ethereum.Tuple {
  get price(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }
}

export class EtherealGallery extends ethereum.SmartContract {
  static bind(address: Address): EtherealGallery {
    return new EtherealGallery("EtherealGallery", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerBalance(): BigInt {
    let result = super.call("ownerBalance", "ownerBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_ownerBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("ownerBalance", "ownerBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proceeds(_address: Address): BigInt {
    let result = super.call("proceeds", "proceeds(address):(uint256)", [
      ethereum.Value.fromAddress(_address)
    ]);

    return result[0].toBigInt();
  }

  try_proceeds(_address: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("proceeds", "proceeds(address):(uint256)", [
      ethereum.Value.fromAddress(_address)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenListing(
    nftAddress: Address,
    tokenId: BigInt
  ): EtherealGallery__tokenListingResultValue0Struct {
    let result = super.call(
      "tokenListing",
      "tokenListing(address,uint256):((uint256,address))",
      [
        ethereum.Value.fromAddress(nftAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );

    return changetype<EtherealGallery__tokenListingResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_tokenListing(
    nftAddress: Address,
    tokenId: BigInt
  ): ethereum.CallResult<EtherealGallery__tokenListingResultValue0Struct> {
    let result = super.tryCall(
      "tokenListing",
      "tokenListing(address,uint256):((uint256,address))",
      [
        ethereum.Value.fromAddress(nftAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EtherealGallery__tokenListingResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }
}

export class BuyTokenCall extends ethereum.Call {
  get inputs(): BuyTokenCall__Inputs {
    return new BuyTokenCall__Inputs(this);
  }

  get outputs(): BuyTokenCall__Outputs {
    return new BuyTokenCall__Outputs(this);
  }
}

export class BuyTokenCall__Inputs {
  _call: BuyTokenCall;

  constructor(call: BuyTokenCall) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BuyTokenCall__Outputs {
  _call: BuyTokenCall;

  constructor(call: BuyTokenCall) {
    this._call = call;
  }
}

export class CancelTokenSaleCall extends ethereum.Call {
  get inputs(): CancelTokenSaleCall__Inputs {
    return new CancelTokenSaleCall__Inputs(this);
  }

  get outputs(): CancelTokenSaleCall__Outputs {
    return new CancelTokenSaleCall__Outputs(this);
  }
}

export class CancelTokenSaleCall__Inputs {
  _call: CancelTokenSaleCall;

  constructor(call: CancelTokenSaleCall) {
    this._call = call;
  }

  get nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelTokenSaleCall__Outputs {
  _call: CancelTokenSaleCall;

  constructor(call: CancelTokenSaleCall) {
    this._call = call;
  }
}

export class ListTokenCall extends ethereum.Call {
  get inputs(): ListTokenCall__Inputs {
    return new ListTokenCall__Inputs(this);
  }

  get outputs(): ListTokenCall__Outputs {
    return new ListTokenCall__Outputs(this);
  }
}

export class ListTokenCall__Inputs {
  _call: ListTokenCall;

  constructor(call: ListTokenCall) {
    this._call = call;
  }

  get nftContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ListTokenCall__Outputs {
  _call: ListTokenCall;

  constructor(call: ListTokenCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawOwnerBalanceCall extends ethereum.Call {
  get inputs(): WithdrawOwnerBalanceCall__Inputs {
    return new WithdrawOwnerBalanceCall__Inputs(this);
  }

  get outputs(): WithdrawOwnerBalanceCall__Outputs {
    return new WithdrawOwnerBalanceCall__Outputs(this);
  }
}

export class WithdrawOwnerBalanceCall__Inputs {
  _call: WithdrawOwnerBalanceCall;

  constructor(call: WithdrawOwnerBalanceCall) {
    this._call = call;
  }
}

export class WithdrawOwnerBalanceCall__Outputs {
  _call: WithdrawOwnerBalanceCall;

  constructor(call: WithdrawOwnerBalanceCall) {
    this._call = call;
  }
}

export class WithdrawProceedsCall extends ethereum.Call {
  get inputs(): WithdrawProceedsCall__Inputs {
    return new WithdrawProceedsCall__Inputs(this);
  }

  get outputs(): WithdrawProceedsCall__Outputs {
    return new WithdrawProceedsCall__Outputs(this);
  }
}

export class WithdrawProceedsCall__Inputs {
  _call: WithdrawProceedsCall;

  constructor(call: WithdrawProceedsCall) {
    this._call = call;
  }
}

export class WithdrawProceedsCall__Outputs {
  _call: WithdrawProceedsCall;

  constructor(call: WithdrawProceedsCall) {
    this._call = call;
  }
}
